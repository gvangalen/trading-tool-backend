version: '3.9'

services:
  # ✅ PostgreSQL container (eigen database)
  postgres:
    image: postgres:14
    container_name: market_dashboard-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - market_dashboard_network

  # ✅ Redis (voor Celery)
  redis:
    image: redis:7
    container_name: market_dashboard-redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - market_dashboard_network

  # ✅ Backend API
  market_data_api:
    container_name: market_dashboard-market_data_api
    build: .
    ports:
      - "5002:5002"
    env_file:
      - .env
    volumes:
      - .:/app  # ✅ realtime sync met je backend-code
    restart: always
    depends_on:
      - redis
      - postgres
    networks:
      - market_dashboard_network

  # ✅ Celery Worker
  celery_worker:
    build: .
    container_name: market_dashboard-celery_worker
    command: ["celery", "-A", "celery_worker.celery", "worker", "--loglevel=info"]
    depends_on:
      - redis
      - market_data_api
    restart: always
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - market_dashboard_network

  # ✅ Celery Beat Scheduler
  celery_beat:
    build: .
    container_name: market_dashboard-celery_beat
    command: ["celery", "-A", "celery_worker.celery", "beat", "--loglevel=info"]
    depends_on:
      - redis
      - celery_worker
    restart: always
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - market_dashboard_network

volumes:
  db_data:

networks:
  market_dashboard_network:
    driver: bridge
